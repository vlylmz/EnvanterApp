@model List<WebApplication1.Models.Software>
@{
    ViewData["Title"] = "Yazılım Lisans Yönetimi";
    var totalSoftware = Model.Count;
    var activeSoftware = Model.Count(s => s.Status == SoftwareStatus.Active);
    var expiringSoftware = Model.Count(s => s.Status == SoftwareStatus.Approaching);
    var expiredSoftware = Model.Count(s => s.Status == SoftwareStatus.Expired);
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.3/sweetalert2.min.css" rel="stylesheet">

<style>
    body {
        background-color: #ffffff;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        color: #2c3e50;
    }

    .page-header {
        padding: 2rem 0 1rem 0;
        border-bottom: none;
        background: transparent;
    }

    .page-title {
        font-size: 2rem;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .page-title i {
        color: #9b59b6;
        font-size: 1.8rem;
    }

    .page-subtitle {
        color: #7f8c8d;
        font-size: 1rem;
        margin-top: 0.5rem;
    }

    .stats-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        border: 1px solid #ecf0f1;
        position: relative;
        overflow: hidden;
    }

    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
    }

    .stat-card.purple::before { background: #9b59b6; }
    .stat-card.green::before { background: #2ecc71; }
    .stat-card.orange::before { background: #f39c12; }
    .stat-card.red::before { background: #e74c3c; }

    .stat-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .stat-info h3 {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0;
        color: #2c3e50;
    }

    .stat-info p {
        margin: 0.5rem 0 0 0;
        font-size: 1rem;
        color: #7f8c8d;
        font-weight: 500;
    }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        color: white;
    }

    .stat-icon.purple { background: #9b59b6; }
    .stat-icon.green { background: #2ecc71; }
    .stat-icon.orange { background: #f39c12; }
    .stat-icon.red { background: #e74c3c; }

    .controls-section {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        border: 1px solid #ecf0f1;
    }

    .search-section {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
        align-items: center;
    }

    .search-input {
        flex: 1;
        padding: 0.75rem 1rem;
        border: 2px solid #ecf0f1;
        border-radius: 8px;
        font-size: 0.95rem;
        transition: all 0.2s ease;
    }

    .search-input:focus {
        outline: none;
        border-color: #9b59b6;
        box-shadow: 0 0 0 3px rgba(155, 89, 182, 0.1);
    }

    .search-input::placeholder {
        color: #bdc3c7;
    }

    .status-toggle {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .status-dropdown {
        padding: 0.75rem 1rem;
        border: 2px solid #ecf0f1;
        border-radius: 8px;
        background: white;
        min-width: 180px;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        font-size: 0.95rem;
        border: none;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
    }

    .btn-primary {
        background: #9b59b6;
        color: white;
    }

    .btn-primary:hover {
        background: #8e44ad;
        color: white;
        transform: translateY(-1px);
    }

    .btn-secondary {
        background: #ecf0f1;
        color: #7f8c8d;
    }

    .btn-secondary:hover {
        background: #d5dbdb;
        color: #2c3e50;
    }

    .btn-secondary.active {
        background: #34495e;
        color: white;
    }

    .filter-actions {
        display: flex;
        gap: 1rem;
        justify-content: space-between;
        align-items: center;
    }

    .view-toggle {
        display: flex;
        background: #ecf0f1;
        border-radius: 8px;
        overflow: hidden;
    }

    .data-section {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        border: 1px solid #ecf0f1;
        overflow: hidden;
    }

    .data-header {
        background: #f8f9fa;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #ecf0f1;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .data-title {
        font-weight: 600;
        color: #2c3e50;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .record-count {
        background: #9b59b6;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .table {
        margin: 0;
        border: none;
    }

    .table th {
        background: #f8f9fa;
        color: #2c3e50;
        font-weight: 600;
        font-size: 0.9rem;
        padding: 1rem 1.5rem;
        border: none;
        border-bottom: 1px solid #ecf0f1;
    }

    .table td {
        padding: 1rem 1.5rem;
        border: none;
        border-bottom: 1px solid #f8f9fa;
        vertical-align: middle;
    }

    .table tbody tr:hover {
        background: #f8f9fa;
    }

    .status-badge {
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
    }

    .status-badge.active {
        background: #d5f4e6;
        color: #2ecc71;
    }

    .status-badge.approaching {
        background: #fef5e7;
        color: #f39c12;
    }

    .status-badge.expired {
        background: #fadbd8;
        color: #e74c3c;
    }

    .software-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .software-icon {
        width: 40px;
        height: 40px;
        border-radius: 8px;
        background: #9b59b6;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .remaining-time {
        font-weight: 600;
    }

    .remaining-time.expired {
        color: #e74c3c;
    }

    .remaining-time.approaching {
        color: #f39c12;
    }

    .remaining-time.active {
        color: #2ecc71;
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .action-btn {
        width: 36px;
        height: 36px;
        border-radius: 6px;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

    .action-btn.view { background: #9b59b6; color: white; }
    .action-btn.edit { background: #f39c12; color: white; }
    .action-btn.delete { background: #e74c3c; color: white; }

    .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #7f8c8d;
    }

    .empty-state i {
        font-size: 4rem;
        margin-bottom: 1rem;
        color: #bdc3c7;
    }

    .empty-state h3 {
        color: #2c3e50;
        margin-bottom: 1rem;
    }

    @@media (max-width: 768px) {
        .stats-container {
            grid-template-columns: 1fr;
        }
        
        .search-section {
            flex-direction: column;
            align-items: stretch;
        }
        
        .filter-actions {
            flex-direction: column;
            gap: 1rem;
            align-items: stretch;
        }
    }
</style>

<!-- Sweet Alert Messages -->
@if (!string.IsNullOrEmpty(successMessage))
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'success',
                title: 'Başarılı!',
                text: '@successMessage',
                timer: 3000,
                showConfirmButton: false,
                toast: true,
                position: 'top-end'
            });
        });
    </script>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Hata!',
                text: '@errorMessage',
                timer: 3000,
                showConfirmButton: false,
                toast: true,
                position: 'top-end'
            });
        });
    </script>
}

<div class="container-fluid px-4">
    <!-- Page Header -->
    <div class="page-header">
        <div class="d-flex justify-content-between align-items-start">
            <div>
                <h1 class="page-title">
                    <i class="fas fa-compact-disc"></i>
                    Yazılım Lisans Yönetimi
                </h1>
                <p class="page-subtitle">Yazılım lisanslarınızı yönetin ve takip edin</p>
            </div>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i>
                Yeni Lisans Ekle
            </a>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="stats-container">
        <div class="stat-card purple">
            <div class="stat-content">
                <div class="stat-info">
                    <h3>@totalSoftware</h3>
                    <p>Toplam Lisans</p>
                </div>
                <div class="stat-icon purple">
                    <i class="fas fa-compact-disc"></i>
                </div>
            </div>
        </div>

        <div class="stat-card green">
            <div class="stat-content">
                <div class="stat-info">
                    <h3>@activeSoftware</h3>
                    <p>Aktif Lisans</p>
                </div>
                <div class="stat-icon green">
                    <i class="fas fa-check-circle"></i>
                </div>
            </div>
        </div>

        <div class="stat-card orange">
            <div class="stat-content">
                <div class="stat-info">
                    <h3>@expiringSoftware</h3>
                    <p>Süresi Yaklaşan</p>
                </div>
                <div class="stat-icon orange">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
            </div>
        </div>

        <div class="stat-card red">
            <div class="stat-content">
                <div class="stat-info">
                    <h3>@expiredSoftware</h3>
                    <p>Süresi Dolmuş</p>
                </div>
                <div class="stat-icon red">
                    <i class="fas fa-times-circle"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Controls -->
    <div class="controls-section">
        <div class="search-section">
            <input type="text" class="search-input" placeholder="🔍 Yazılım Adı veya Marka" id="searchInput">
            
            <div class="status-toggle">
                <label>Durum</label>
                <select class="status-dropdown" id="statusFilter">
                    <option value="">Tüm Durumlar</option>
                    @foreach (SoftwareStatus status in Enum.GetValues<SoftwareStatus>())
                    {
                        <option value="@status">
                            @switch(status)
                            {
                                case SoftwareStatus.Active:
                                    @:Aktif
                                    break;
                                case SoftwareStatus.Approaching:
                                    @:Yaklaşan
                                    break;
                                case SoftwareStatus.Expired:
                                    @:Süresi Dolmuş
                                    break;
                            }
                        </option>
                    }
                </select>
            </div>
        </div>

        <div class="filter-actions">
            <div class="d-flex gap-2">
                <button class="btn btn-primary" id="searchBtn">
                    <i class="fas fa-search"></i>
                    Ara
                </button>
                <button class="btn btn-secondary" id="clearBtn">
                    <i class="fas fa-times"></i>
                    Temizle
                </button>
                <a asp-action="Expiring" class="btn btn-secondary">
                    <i class="fas fa-exclamation-triangle"></i>
                    Süresi Yaklaşanlar
                </a>
                <a asp-action="Expired" class="btn btn-secondary">
                    <i class="fas fa-times-circle"></i>
                    Süresi Dolmuşlar
                </a>
            </div>

            <div class="view-toggle">
                <button class="btn btn-secondary active" data-view="table">
                    <i class="fas fa-table"></i>
                    Tablo
                </button>
                <button class="btn btn-secondary" data-view="cards">
                    <i class="fas fa-th-large"></i>
                    Kartlar
                </button>
            </div>
        </div>
    </div>

    <!-- Data Section -->
    <div class="data-section">
        <div class="data-header">
            <div class="data-title">
                <i class="fas fa-list"></i>
                Yazılım Lisans Listesi
                <span class="record-count">@Model.Count kayıt</span>
            </div>
        </div>

        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table" id="softwareTable">
                    <thead>
                        <tr>
                            <th>
                                <i class="fas fa-compact-disc me-2"></i>
                                Yazılım Bilgileri
                            </th>
                            <th>
                                <i class="fas fa-calendar-alt me-2"></i>
                                Satın Alma Tarihi
                            </th>
                            <th>
                                <i class="fas fa-hourglass-half me-2"></i>
                                Süre / Bitiş
                            </th>
                            <th>
                                <i class="fas fa-clock me-2"></i>
                                Kalan Süre
                            </th>
                            <th>
                                <i class="fas fa-circle me-2"></i>
                                Durum
                            </th>
                            <th>
                                <i class="fas fa-cog me-2"></i>
                                İşlemler
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var software in Model)
                        {
                            <tr>
                                <td>
                                    <div class="software-info">
                                        <div class="software-icon">
                                            @(software.Name.Substring(0, Math.Min(2, software.Name.Length)).ToUpper())
                                        </div>
                                        <div>
                                            <strong>@software.Name</strong>
                                            <br><small class="text-muted">@software.Brand</small>
                                        </div>
                                    </div>
                                </td>
                                <td>@software.PurchaseDate.ToString("dd.MM.yyyy")</td>
                                <td>
                                    <div>
                                        <strong>@software.Duration</strong>
                                        <br><small class="text-muted">@software.CompletionDate.ToString("dd.MM.yyyy")</small>
                                    </div>
                                </td>
                                <td>
                                    <span class="remaining-time @(software.Status.ToString().ToLower())">
                                        @software.RemainingTime
                                    </span>
                                </td>
                                <td>
                                    @switch(software.Status)
                                    {
                                        case SoftwareStatus.Active:
                                            <span class="status-badge active">
                                                <i class="fas fa-circle"></i>
                                                Aktif
                                            </span>
                                            break;
                                        case SoftwareStatus.Approaching:
                                            <span class="status-badge approaching">
                                                <i class="fas fa-exclamation-triangle"></i>
                                                Yaklaşan
                                            </span>
                                            break;
                                        case SoftwareStatus.Expired:
                                            <span class="status-badge expired">
                                                <i class="fas fa-times-circle"></i>
                                                Süresi Dolmuş
                                            </span>
                                            break;
                                    }
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <a asp-action="Details" asp-route-id="@software.Id" class="action-btn view" title="Detaylar">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@software.Id" class="action-btn edit" title="Düzenle">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@software.Id" class="action-btn delete delete-btn" title="Sil">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-compact-disc"></i>
                <h3>Henüz yazılım lisansı yok</h3>
                <p>İlk yazılım lisansınızı eklemek için yukarıdaki "Yeni Lisans Ekle" butonunu kullanın.</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.3/sweetalert2.min.js"></script>
    <script>
        // Arama fonksiyonu
        document.getElementById('searchInput').addEventListener('input', function() {
            filterTable();
        });

        document.getElementById('statusFilter').addEventListener('change', function() {
            filterTable();
        });

        function filterTable() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value.toLowerCase();
            const tableRows = document.querySelectorAll('#softwareTable tbody tr');
            
            tableRows.forEach(row => {
                const text = row.textContent.toLowerCase();
                const matchesSearch = text.includes(searchTerm);
                const matchesStatus = !statusFilter || text.includes(statusFilter);
                
                row.style.display = (matchesSearch && matchesStatus) ? '' : 'none';
            });
        }

        // Temizle butonu
        document.getElementById('clearBtn').addEventListener('click', function() {
            document.getElementById('searchInput').value = '';
            document.getElementById('statusFilter').value = '';
            filterTable();
        });

        // Silme işlemi için SweetAlert
        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const deleteUrl = this.href.replace('/Delete/', '/DeleteConfirmed/');
                const softwareName = this.closest('tr').querySelector('.software-info strong').textContent;
                
                Swal.fire({
                    title: 'Yazılım Lisansını Sil?',
                    html: `<strong>${softwareName}</strong> yazılım lisansını silmek istediğinizden emin misiniz?<br><br><small style="color: #e74c3c;">Bu işlem geri alınamaz!</small>`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#e74c3c',
                    cancelButtonColor: '#95a5a6',
                    confirmButtonText: '🗑️ Evet, Sil!',
                    cancelButtonText: '❌ İptal',
                    reverseButtons: true,
                    focusCancel: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Loading göster
                        Swal.fire({
                            title: 'Siliniyor...',
                            text: 'Yazılım lisansı siliniyor, lütfen bekleyin.',
                            icon: 'info',
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            showConfirmButton: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        // AJAX ile silme işlemi
                        fetch(deleteUrl, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value || ''
                            }
                        })
                        .then(response => {
                            if (response.ok) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Silindi!',
                                    text: 'Yazılım lisansı başarıyla silindi.',
                                    timer: 2000,
                                    showConfirmButton: false
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                throw new Error('Silme işlemi başarısız');
                            }
                        })
                        .catch(error => {
                            Swal.fire({
                                icon: 'error',
                                title: 'Hata!',
                                text: 'Yazılım lisansı silinirken bir hata oluştu.',
                                confirmButtonColor: '#e74c3c'
                            });
                        });
                    }
                });
            });
        });

        // View toggle
        document.querySelectorAll('[data-view]').forEach(button => {
            button.addEventListener('click', function() {
                document.querySelectorAll('[data-view]').forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
                
                // Kart görünümü için gelecekte kullanılabilir
                if (this.dataset.view === 'cards') {
                    console.log('Kart görünümü aktif');
                }
            });
        });
    </script>
}