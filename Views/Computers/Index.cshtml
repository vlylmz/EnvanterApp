@model List<WebApplication1.Models.Computer>
@{
    ViewData["Title"] = "Bilgisayar Yönetimi";
    var totalComputers = Model.Count;
    var activeComputers = Model.Count(c => c.Status == ComputerStatus.Aktif);
    var passiveComputers = totalComputers - activeComputers;
    var successMessage = TempData["Success"] as string;
    var errorMessage = TempData["Error"] as string;
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.3/sweetalert2.min.css" rel="stylesheet">

<style>
    body {
        background-color: #ffffff;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        color: #2c3e50;
    }

    .page-header {
        padding: 2rem 0 1rem 0;
        border-bottom: none;
        background: transparent;
    }

    .page-title {
        font-size: 2rem;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .page-title i {
        color: #3498db;
        font-size: 1.8rem;
    }

    .page-subtitle {
        color: #7f8c8d;
        font-size: 1rem;
        margin-top: 0.5rem;
    }

    .stats-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        border: 1px solid #ecf0f1;
        position: relative;
        overflow: hidden;
    }

    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
    }

    .stat-card.blue::before { background: #3498db; }
    .stat-card.green::before { background: #2ecc71; }
    .stat-card.gray::before { background: #95a5a6; }
    .stat-card.teal::before { background: #1abc9c; }

    .stat-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .stat-info h3 {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0;
        color: #2c3e50;
    }

    .stat-info p {
        margin: 0.5rem 0 0 0;
        font-size: 1rem;
        color: #7f8c8d;
        font-weight: 500;
    }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        color: white;
    }

    .stat-icon.blue { background: #3498db; }
    .stat-icon.green { background: #2ecc71; }
    .stat-icon.gray { background: #95a5a6; }
    .stat-icon.teal { background: #1abc9c; }

    .controls-section {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        border: 1px solid #ecf0f1;
    }

    .search-section {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
        align-items: center;
    }

    .search-input {
        flex: 1;
        padding: 0.75rem 1rem;
        border: 2px solid #ecf0f1;
        border-radius: 8px;
        font-size: 0.95rem;
        transition: all 0.2s ease;
    }

    .search-input:focus {
        outline: none;
        border-color: #3498db;
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
    }

    .search-input::placeholder {
        color: #bdc3c7;
    }

    .status-toggle {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .status-dropdown {
        padding: 0.75rem 1rem;
        border: 2px solid #ecf0f1;
        border-radius: 8px;
        background: white;
        min-width: 180px;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        font-size: 0.95rem;
        border: none;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
    }

    .btn-primary {
        background: #3498db;
        color: white;
    }

    .btn-primary:hover {
        background: #2980b9;
        color: white;
        transform: translateY(-1px);
    }

    .btn-secondary {
        background: #ecf0f1;
        color: #7f8c8d;
    }

    .btn-secondary:hover {
        background: #d5dbdb;
        color: #2c3e50;
    }

    .btn-secondary.active {
        background: #34495e;
        color: white;
    }

    .filter-actions {
        display: flex;
        gap: 1rem;
        justify-content: space-between;
        align-items: center;
    }

    .view-toggle {
        display: flex;
        background: #ecf0f1;
        border-radius: 8px;
        overflow: hidden;
    }

    .data-section {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        border: 1px solid #ecf0f1;
        overflow: hidden;
    }

    .data-header {
        background: #f8f9fa;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #ecf0f1;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .data-title {
        font-weight: 600;
        color: #2c3e50;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .record-count {
        background: #3498db;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .table {
        margin: 0;
        border: none;
    }

    .table th {
        background: #f8f9fa;
        color: #2c3e50;
        font-weight: 600;
        font-size: 0.9rem;
        padding: 1rem 1.5rem;
        border: none;
        border-bottom: 1px solid #ecf0f1;
    }

    .table td {
        padding: 1rem 1.5rem;
        border: none;
        border-bottom: 1px solid #f8f9fa;
        vertical-align: middle;
    }

    .table tbody tr:hover {
        background: #f8f9fa;
    }

    .status-badge {
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
    }

    .status-badge.active {
        background: #d5f4e6;
        color: #2ecc71;
    }

    .status-badge.inactive {
        background: #f5f6fa;
        color: #95a5a6;
    }

    .employee-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .employee-avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background: #3498db;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 0.8rem;
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .action-btn {
        width: 36px;
        height: 36px;
        border-radius: 6px;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }

    .action-btn.view { background: #3498db; color: white; }
    .action-btn.edit { background: #f39c12; color: white; }
    .action-btn.delete { background: #e74c3c; color: white; }

    .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #7f8c8d;
    }

    .empty-state i {
        font-size: 4rem;
        margin-bottom: 1rem;
        color: #bdc3c7;
    }

    .empty-state h3 {
        color: #2c3e50;
        margin-bottom: 1rem;
    }

    @@media (max-width: 768px) {
        .stats-container {
            grid-template-columns: 1fr;
        }
        
        .search-section {
            flex-direction: column;
            align-items: stretch;
        }
        
        .filter-actions {
            flex-direction: column;
            gap: 1rem;
            align-items: stretch;
        }
    }
</style>

<!-- Sweet Alert Messages -->
@if (!string.IsNullOrEmpty(successMessage))
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'success',
                title: 'Başarılı!',
                text: '@successMessage',
                timer: 3000,
                showConfirmButton: false,
                toast: true,
                position: 'top-end'
            });
        });
    </script>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Hata!',
                text: '@errorMessage',
                timer: 3000,
                showConfirmButton: false,
                toast: true,
                position: 'top-end'
            });
        });
    </script>
}

<div class="container-fluid px-4">
    <!-- Page Header -->
    <div class="page-header">
        <div class="d-flex justify-content-between align-items-start">
            <div>
                <h1 class="page-title">
                    <i class="fas fa-desktop"></i>
                    Bilgisayar Yönetimi
                </h1>
                <p class="page-subtitle">Sisteme kayıtlı bilgisayarları yönetin</p>
            </div>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i>
                Yeni Bilgisayar Ekle
            </a>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="stats-container">
        <div class="stat-card blue">
            <div class="stat-content">
                <div class="stat-info">
                    <h3>@totalComputers</h3>
                    <p>Toplam Bilgisayar</p>
                </div>
                <div class="stat-icon blue">
                    <i class="fas fa-desktop"></i>
                </div>
            </div>
        </div>

        <div class="stat-card green">
            <div class="stat-content">
                <div class="stat-info">
                    <h3>@activeComputers</h3>
                    <p>Aktif Bilgisayar</p>
                </div>
                <div class="stat-icon green">
                    <i class="fas fa-check-circle"></i>
                </div>
            </div>
        </div>

        <div class="stat-card gray">
            <div class="stat-content">
                <div class="stat-info">
                    <h3>@passiveComputers</h3>
                    <p>Pasif Bilgisayar</p>
                </div>
                <div class="stat-icon gray">
                    <i class="fas fa-pause-circle"></i>
                </div>
            </div>
        </div>

    </div>

    <!-- Search and Filter Controls -->
    <div class="controls-section">
        <div class="search-section">
            <input type="text" class="search-input" placeholder="🔍 Bilgisayar Adı veya Açıklama" id="searchInput">
            
            <div class="status-toggle">
                <label>Durum</label>
                <select class="status-dropdown" id="statusFilter">
                    <option value="">Tüm Durumlar</option>
                    @foreach (ComputerStatus status in Enum.GetValues<ComputerStatus>())
                    {
                        <option value="@status">@status</option>
                    }
                </select>
            </div>
        </div>

        <div class="filter-actions">
            <div class="d-flex gap-2">
                <button class="btn btn-primary" id="searchBtn">
                    <i class="fas fa-search"></i>
                    Ara
                </button>
                <button class="btn btn-secondary" id="clearBtn">
                    <i class="fas fa-times"></i>
                    Temizle
                </button>
            </div>

            <div class="view-toggle">
                <button class="btn btn-secondary active" data-view="table">
                    <i class="fas fa-table"></i>
                    Tablo
                </button>
                <button class="btn btn-secondary" data-view="cards">
                    <i class="fas fa-th-large"></i>
                    Kartlar
                </button>
            </div>
        </div>
    </div>

    <!-- Data Section -->
    <div class="data-section">
        <div class="data-header">
            <div class="data-title">
                <i class="fas fa-list"></i>
                Bilgisayar Listesi
                <span class="record-count">@Model.Count kayıt</span>
            </div>
        </div>

        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table" id="computerTable">
                    <thead>
                        <tr>
                            <th>
                                <i class="fas fa-desktop me-2"></i>
                                Bilgisayar Bilgileri
                            </th>
                            <th>
                                <i class="fas fa-building me-2"></i>
                                Firma
                            </th>
                            <th>
                                <i class="fas fa-user me-2"></i>
                                Zimmetli Çalışan
                            </th>
                            <th>
                                <i class="fas fa-circle me-2"></i>
                                Durum
                            </th>
                            <th>
                                <i class="fas fa-calendar me-2"></i>
                                Kayıt Tarihi
                            </th>
                            <th>
                                <i class="fas fa-cog me-2"></i>
                                İşlemler
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var computer in Model)
                        {
                            <tr>
                                <td>
                                    <div>
                                        <strong>@computer.Name</strong>
                                        @if (!string.IsNullOrEmpty(computer.AssetTag))
                                        {
                                            <br><small class="text-muted">@computer.AssetTag</small>
                                        }
                                    </div>
                                </td>
                                <td>@(computer.Company?.Name ?? "-")</td>
                                <td>
                                    @if (computer.AssignedEmployee != null)
                                    {
                                        <div class="employee-info">
                                            <div class="employee-avatar">
                                                @(computer.AssignedEmployee.FirstName?.Substring(0, 1).ToUpper())@(computer.AssignedEmployee.LastName?.Substring(0, 1).ToUpper())
                                            </div>
                                            <span>@computer.AssignedEmployee.FirstName @computer.AssignedEmployee.LastName</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Atanmamış</span>
                                    }
                                </td>
                                <td>
                                    @if (computer.Status == ComputerStatus.Aktif)
                                    {
                                        <span class="status-badge active">
                                            <i class="fas fa-circle"></i>
                                            Aktif
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="status-badge inactive">
                                            <i class="fas fa-circle"></i>
                                            @computer.Status
                                        </span>
                                    }
                                </td>
                                <td>@computer.CreatedDate.ToString("dd.MM.yyyy")</td>
                                <td>
                                    <div class="action-buttons">
                                        <a asp-action="Details" asp-route-id="@computer.Id" class="action-btn view" title="Detaylar">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@computer.Id" class="action-btn edit" title="Düzenle">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@computer.Id" class="action-btn delete delete-btn" title="Sil">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-desktop"></i>
                <h3>Henüz bilgisayar kaydı yok</h3>
                <p>İlk bilgisayarınızı eklemek için yukarıdaki "Yeni Bilgisayar Ekle" butonunu kullanın.</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.3/sweetalert2.min.js"></script>
    <script>
        // Arama fonksiyonu
        document.getElementById('searchInput').addEventListener('input', function() {
            filterTable();
        });

        document.getElementById('statusFilter').addEventListener('change', function() {
            filterTable();
        });

        function filterTable() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value.toLowerCase();
            const tableRows = document.querySelectorAll('#computerTable tbody tr');
            
            tableRows.forEach(row => {
                const text = row.textContent.toLowerCase();
                const matchesSearch = text.includes(searchTerm);
                const matchesStatus = !statusFilter || text.includes(statusFilter);
                
                row.style.display = (matchesSearch && matchesStatus) ? '' : 'none';
            });
        }

        // Temizle butonu
        document.getElementById('clearBtn').addEventListener('click', function() {
            document.getElementById('searchInput').value = '';
            document.getElementById('statusFilter').value = '';
            filterTable();
        });

        // Silme işlemi için SweetAlert
        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const deleteUrl = this.href;
                
                Swal.fire({
                    title: 'Emin misiniz?',
                    text: "Bu bilgisayarı silmek istediğinizden emin misiniz?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#e74c3c',
                    cancelButtonColor: '#95a5a6',
                    confirmButtonText: 'Evet, Sil!',
                    cancelButtonText: 'İptal'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = deleteUrl;
                    }
                });
            });
        });

        // View toggle
        document.querySelectorAll('[data-view]').forEach(button => {
            button.addEventListener('click', function() {
                document.querySelectorAll('[data-view]').forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
                
                // Kart görünümü için gelecekte kullanılabilir
                if (this.dataset.view === 'cards') {
                    console.log('Kart görünümü aktif');
                }
            });
        });
    </script>
}